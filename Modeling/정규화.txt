[데이터 베이스 모델링 >> 성능적인 측면]

1. 정규화 
2. 반정규화
3. 테이블 통합 ... 분할
4.  데이터 조인(JOIN)
5.  PK , FK 설정


모델링 >> 성능
정규화 (관심사별로 ...) : 주관심요소 별로 나누어서 관리 : 고객테이블 , 주문테이블
>AOP(관점 지향 프로그래밍)
>관심사 별로 분산 

https://lipcoder.tistory.com/341
CRUD 매트릭스 분석 (트랜잭션의 유형 파악)

C(insert) , R(select) , u (update)  d(delete)

>>용량과 트랜잭션의 유형 파악 >> 반정규화 (근거) => 무결성 문제 해결
>>테이블 , 속성 , 관계 합치거나 나누거나 변경 .....

--------------------------------------------------------------------
정규화
1. 데이터 중복 감소  >> 성능향상
2. 데이터 관심사로 관리 >> 성능 향성 (학생 , 성적)
3. 조인 질의 >>  성능저하
4. 학점 데이터 보고 싶은데 학생 이름 , 과목명 그리고 학과명 같이 보고 싶어요 (빈번하게 )
>> 최소 3개 , 4개 조인 >> 성능저하

select 학점.평점, 과목.과목명 , 학생.학생명 , 학과.학과명
from 학점 join 과목 on 학점.과목코드 = 과목.과목코드
               join 학생 on 학점.학번 = 학생.학번
               join 학과 on 학생.소속학과코드 = 학과.소속학과코드


정규화 모델 수행 >> 조회성능 >> 처리조건 >> 관심사별 테이블(성능 향상)
                                                        >> 나누어진 여러개의 정보 통합 ( 성능저하)

정규화 모델 수행 >> 입력, 수정, 삭제 작업 >> 성능향상

질의) 어떤 학생의 학년 변경
정규화 전)  5000만건의 데이터 대상 어떤 학생 ... 학년 변경
정규화 후)  1000만건에서 해당 학생의 학년만  한건 변경

질의) 4학년 학생의 학번 , 이름을 조회
정규화 전)  5000만건 수강이력을 조회 
정규화 후)  1000만건 학생수 만큼 조회 (성능 향상)

질의) 학번 , 학생명 , 평점 조회시 
정규화 전) 하나의 테이블 조회
정규화 후) 조인 (약간의 성능 저하)


반정규화(역정규화)
<-> 비정규화 

반(역정규화) > 정규화가 된 상황에서 (엔티티 , 속성 , 관계) 중복, 통합, 분리해서 성능향상 (조회) 

비정규화(정규화 하지 않는 것)

과도한 반정규화 테이블 통합 >> 데이터 무결성 저하 (침해)


반정규화 절차 적인 방법
1. 대상 조사
2. 다른 방법 검토 (view, 파티셔닝 , 클러스트링(디스크 같은 블럭 저장) ,인덱스 추가(추가. 삭제. 변경)

create or replace view v100 > view 는 성능향상이 목적이 아니고 개발자의 편리성
as
   select * from .... (조인커리)


3. 반정규화 적용 방법
3.1 테이블 반정규화
3.2 속성 반정규화
3.3 관계 반정규화

기법
[컬럼...반정규화]

1. 중복 컬럼 추가
2.  파생 컬럼 추가
3. 이력테이블컬럼 추가    ----이슈
4. PK분리 컬럼 추가
5. 테이터 복구를 위한 컬럼 추가  ---- 이슈


중복 컬럼 추가
>조인 횟수 감소 .... 다른 테이블에 컬럼을 중복해서 ...
ex) 다대다   (책 저자와의 관계)    저자이름, 책이름 3개 조인 >>   책저장 >> 저자이름, 책이름

파생 컬럼 추가 
>총합, 평균 , 총금액 (값의 계산으로 시간지연을 줄이는 방법) 미리 값을 계산해서 컬럼 으로
>계산된 컬럼 

이력테이블 컬럼 추가 
>학력, 자격증 .... 검색속도의 향상 최근값 여부 , 종료여부 추가 해서 처리하는 방법


PK분리에 의한 컬럼 추가 

데이터 복구를 위한 컬럼 추가 

-------------------------------------------------------------------------------------


[테이블 반정규화]
1. 관계병합 ,  (슈퍼 , 서브 타입) > 테이블 병합
2. 테이블 분할 > 수직 , 수평 분할
3. 테이블 추가 > 중복테이블추가 , 통계테이블추가 , 이력테이블추가 , 부분 테이블 추가
-------------------------------------------------------------------------------------

테이블 반정규화

1.테이블 병합 
1.1 관계 병합
1.2 슈퍼/서브타입 병합

>>일반화 관계 표현 
>>공통속성 (super)  개별속성(특수화 ,구체화)(sub)

슈퍼타입과 서브타입 풀기 
데이터 양과 트랜잭션 유형에 따라서

1. 1 : 1 타입 (one to one type) 
  각각의 테이블별로 조회가 많이 발생 

2. 슈퍼,서브  (plus type)
  슈퍼 +서브 묶어서 조회 다수 발생 
  

3. All in one (single type)
   모든 데이터가 조회 대상 ...

one to one    /     Plus type     / single type
  개별 테이블               슈퍼 + 서브             하나의 테이블 통합
        0                                                                             확장성
                                                                   0                    조인
                                                                   0                  관리성








